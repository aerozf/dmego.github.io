{"title":"基于ubuntu16.04快速构建Hyperledger Fabric网络","date":"2018-05-14T23:56:00.000Z","author":"Dmego","link":"2018/05/14/quick-start-hyperledger-fabric","comments":true,"tags":["Hyperledger Fabric"],"categories":["技术"],"updated":"2019-12-22T18:21:32.541Z","content":"<a id=\"more\"></a>\n<center>\n<img src=\"/2018/05/14/quick-start-hyperledger-fabric/fEAgecbB2l.png\" width=\"300px\">\n</center>\n<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"2018/05/14/quick-start-hyperledger-fabric#前言\"></a> 前言<a href=\"2018/05/14/quick-start-hyperledger-fabric#前言\"></a></h2>\n<p>最近在参加一个比赛,使用到了区块链的开源软件<code>hyperledger</code>,由于之前从未接触过区块链,以及和区块链开发相关的内容,所有在网上查阅了大量的资料,并且通过学习<a href=\"http://yeasy.github.io/\" target=\"_blank\" rel=\"noopener\">yeasy(杨宝华)</a>开源的入门书籍<a href=\"https://github.com/yeasy/blockchain_guide\" target=\"_blank\" rel=\"noopener\">区块链技术指南</a>以及进阶学习的《区块链原理、设计与应用》,对区块链的一些相关概念有了一定认识。这里记录的是我安装<code>hyperledger fabric</code>的所有步骤，同时也是一个快速搭建单机环境的参考教程。</p>\n<h2 id=\"准备好机器环境\"><a class=\"markdownIt-Anchor\" href=\"2018/05/14/quick-start-hyperledger-fabric#准备好机器环境\"></a> 准备好机器环境<a href=\"2018/05/14/quick-start-hyperledger-fabric#准备好机器环境\"></a></h2>\n<p>本人的区块链网络部署在<code>VMware</code>搭建的ubuntu16.04的环境下（推荐使用该版本的系统），详细的系统版本为<code>ubuntu-16.04.4-desktop-amd64.iso</code>,是从<a href=\"http://mirrors.163.com/ubuntu-releases/16.04/\" target=\"_blank\" rel=\"noopener\">网易开源镜像站</a>下载的。对于如何使用<code>VMware</code>安装虚拟机以及让虚拟机访问网络，网上有许多教程，这里就不重复讲了。</p>\n<p>当将系统安装完成后，需要更换源，使用<code>desktop</code>版的可以直接在设置里面选择最佳服务器,如下图所示<br>\n<img src=\"/2018/05/14/quick-start-hyperledger-fabric/ea2fAlGB2D.png\" alt=\"选择最佳服务器\"><br>\n若使用的是服务器版本,则可以使用如下命令换成高速的源</p>\n<ul>\n<li>先备份原来的源文件</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>打开sources.list文件,删除原来的内容</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>任选下面一组源文件复制到sources.list中</li>\n</ul>\n<blockquote>\n<p>网易源</p>\n</blockquote>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse  </span><br><span class=\"line\">deb http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse  </span><br><span class=\"line\">deb http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse  </span><br><span class=\"line\">deb http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse  </span><br><span class=\"line\">deb http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse  </span><br><span class=\"line\">deb-src http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse  </span><br><span class=\"line\">deb-src http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse  </span><br><span class=\"line\">deb-src http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse  </span><br><span class=\"line\">deb-src http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse  </span><br><span class=\"line\">deb-src http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br></pre></td></tr></table></div></figure>\n<blockquote>\n<p>阿里源</p>\n</blockquote>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># deb cdrom:[Ubuntu 16.04 LTS _Xenial Xerus_ - Release amd64 (20160420.1)]/ xenial main restricted  </span></span><br><span class=\"line\">deb-src http://archive.ubuntu.com/ubuntu xenial main restricted <span class=\"comment\">#Added by software-properties  </span></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ xenial main restricted  </span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ xenial main restricted multiverse universe <span class=\"comment\">#Added by software-properties  </span></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted  </span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted multiverse universe <span class=\"comment\">#Added by software-properties  </span></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ xenial universe  </span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates universe  </span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ xenial multiverse  </span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates multiverse  </span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse  </span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse <span class=\"comment\">#Added by software-properties  </span></span><br><span class=\"line\">deb http://archive.canonical.com/ubuntu xenial partner  </span><br><span class=\"line\">deb-src http://archive.canonical.com/ubuntu xenial partner  </span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted  </span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted multiverse universe <span class=\"comment\">#Added by software-properties  </span></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ xenial-security universe  </span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ xenial-security multiverse</span><br></pre></td></tr></table></div></figure>\n<blockquote>\n<p>搜狐源</p>\n</blockquote>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb http://mirrors.sohu.com/ubuntu/ trusty main restricted universe multiverse  </span><br><span class=\"line\">deb http://mirrors.sohu.com/ubuntu/ trusty-security main restricted universe multiverse  </span><br><span class=\"line\">deb http://mirrors.sohu.com/ubuntu/ trusty-updates main restricted universe multiverse  </span><br><span class=\"line\">deb http://mirrors.sohu.com/ubuntu/ trusty-proposed main restricted universe multiverse  </span><br><span class=\"line\">deb http://mirrors.sohu.com/ubuntu/ trusty-backports main restricted universe multiverse  </span><br><span class=\"line\">deb-src http://mirrors.sohu.com/ubuntu/ trusty main restricted universe multiverse  </span><br><span class=\"line\">deb-src http://mirrors.sohu.com/ubuntu/ trusty-security main restricted universe multiverse  </span><br><span class=\"line\">deb-src http://mirrors.sohu.com/ubuntu/ trusty-updates main restricted universe multiverse  </span><br><span class=\"line\">deb-src http://mirrors.sohu.com/ubuntu/ trusty-proposed main restricted universe multiverse  </span><br><span class=\"line\">deb-src http://mirrors.sohu.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br></pre></td></tr></table></div></figure>\n<p>复制进去后,使用<code>:wq</code>保存,然后使用如下命令更新一下</p>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install update</span><br></pre></td></tr></table></div></figure>\n<p>执行完成后环境就基本上准备好了,如果使用的是服务器版本,觉得使用不方便的话,可以使用<code>xshell</code>之类的远程连接工具连接你的虚拟机。如果你的环境搭建再云服务器上，例如阿里云或者腾讯云，可以不用更新源，直接在自己的主机上使用远程连接工具连接上云主机，环境就算完成了（若在本地不能连接上云主机，或者虚拟机，检查一下<code>ssh</code>是否已经安装并启动,若没有，可以参加网上的教程，配置远程连接）。</p>\n<h2 id=\"安装go语言环境\"><a class=\"markdownIt-Anchor\" href=\"2018/05/14/quick-start-hyperledger-fabric#安装go语言环境\"></a> 安装GO语言环境<a href=\"2018/05/14/quick-start-hyperledger-fabric#安装go语言环境\"></a></h2>\n<p>不推荐使用<code>apt</code>的方式安装GO,原因是这样安装的版本比较老，推荐安装最新版的GO,具体安装命令如下</p>\n<ul>\n<li>下载最新的GO安装包，具体的最新版本号可以从<a href=\"https://golang.org/\" target=\"_blank\" rel=\"noopener\">Golang官网</a>上查看</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wegt https://dl.google.com/go/go1.10.2.linux-amd64.tar.gz</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>解压安装包到<code>/usr/local</code>目录下</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo tar -C /usr/<span class=\"built_in\">local</span> -xzf go1.10.2.linux-amd64.tar.gz</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>编辑当前用户的环境变量</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.profile</span><br></pre></td></tr></table></div></figure>\n<p>添加如下内容</p>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/usr/<span class=\"built_in\">local</span>/go/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> GOROOT=/usr/<span class=\"built_in\">local</span>/go</span><br><span class=\"line\"><span class=\"comment\">#这里配置的GOPATH目录为家目录的的go文件夹</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> GOPATH=<span class=\"variable\">$HOME</span>/go</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"8.48ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewbox=\"0 -791.3 3651.3 936.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">PATH:</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-50\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-41\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-54\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-48\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-3A\" d=\"M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-50\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-41\" x=\"751\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-54\" x=\"1502\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-48\" x=\"2206\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-3A\" x=\"3372\" y=\"0\"/>\n</g>\n</svg>HOME/go/bin</span><br></pre></td></tr></table></div></figure>\n<p>使用<code>:wq</code>保存后使用如下命令将保存立即刷新</p>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.profile</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>建立<code>GOPATH</code>目录<br>\n由于在环境变量中配置了<code>GOPATH</code>目录的位置，所以我们需要在家目录下创建该文件夹</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\">mkdir go</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>查看go版本，测试环境配置是否成功</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ go version</span><br><span class=\"line\">go version go1.10 linux/amd64</span><br></pre></td></tr></table></div></figure>\n<h2 id=\"安装docker\"><a class=\"markdownIt-Anchor\" href=\"2018/05/14/quick-start-hyperledger-fabric#安装docker\"></a> 安装Docker<a href=\"2018/05/14/quick-start-hyperledger-fabric#安装docker\"></a></h2>\n<p>这里使用的<code>Docker</code>的<a href=\"https://docs.docker.com/install/linux/docker-ce/ubuntu/\" target=\"_blank\" rel=\"noopener\">官方文档</a>来安装docker</p>\n<ul>\n<li>如果系统中有旧版本的<code>Docker</code>,需要先使用如下命令卸载</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get remove docker docker-engine docker.io</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>更新<code>apt</code>包索引</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>安装软件包以允许<code>apt</code>通过HTTPS使用远程库</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install \\</span><br><span class=\"line\">    apt-transport-https \\</span><br><span class=\"line\">    ca-certificates \\</span><br><span class=\"line\">    curl \\</span><br><span class=\"line\">    software-properties-common</span><br></pre></td></tr></table></div></figure>\n<p>若出现无法识别命令，可以先将该命令复制到一个文本文件中，将<code>\\</code>去掉，将所有语句放在同一行下，然后复制执行。</p>\n<ul>\n<li>添加<code>Docker</code>的官方<code>GPG</code>密钥</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>通过搜索指纹的最后8个字符，确认您现在拥有指纹识别码<code>9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88</code></li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-key fingerprint 0EBFCD88</span><br><span class=\"line\"></span><br><span class=\"line\">pub   4096R/0EBFCD88 2017-02-22</span><br><span class=\"line\">      Key fingerprint = 9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88</span><br><span class=\"line\">uid                  Docker Release (CE deb) &lt;docker@docker.com&gt;</span><br><span class=\"line\">sub   4096R/F273FCD8 2017-02-22</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>使用以下命令设置稳定版本的远程库</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo add-apt-repository \\</span><br><span class=\"line\">   <span class=\"string\">\"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\</span></span><br><span class=\"line\"><span class=\"string\">   <span class=\"variable\">$(lsb_release -cs)</span> \\</span></span><br><span class=\"line\"><span class=\"string\">   stable\"</span></span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>再次更新<code>apt</code>包索引</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>使用<code>apt</code>安装<code>docker-ce</code></li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install docker-ce</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>查看docker版本，测试环境配置是否成功</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker version</span><br><span class=\"line\">Client:</span><br><span class=\"line\"> Version:      18.03.1-ce</span><br><span class=\"line\"> API version:  1.37</span><br><span class=\"line\"> Go version:   go1.9.5</span><br><span class=\"line\"> Git commit:   9ee9f40</span><br><span class=\"line\"> Built:        Thu Apr 26 07:17:20 2018</span><br><span class=\"line\"> OS/Arch:      linux/amd64</span><br><span class=\"line\"> Experimental: <span class=\"literal\">false</span></span><br><span class=\"line\"> Orchestrator: swarm</span><br><span class=\"line\"></span><br><span class=\"line\">Server:</span><br><span class=\"line\"> Engine:</span><br><span class=\"line\">  Version:      18.03.1-ce</span><br><span class=\"line\">  API version:  1.37 (minimum version 1.12)</span><br><span class=\"line\">  Go version:   go1.9.5</span><br><span class=\"line\">  Git commit:   9ee9f40</span><br><span class=\"line\">  Built:        Thu Apr 26 07:15:30 2018</span><br><span class=\"line\">  OS/Arch:      linux/amd64</span><br><span class=\"line\">  Experimental: <span class=\"literal\">false</span></span><br></pre></td></tr></table></div></figure>\n<p>安装完成之后，需要将当前用户添加到<code>docker</code>用户组，然后为该用户添加<code>sudo</code>权限</p>\n<ul>\n<li>若没有创建<code>docker</code>用户组，可以使用如下命令创建一个<code>GID</code>为<code>999</code>，组名为<code>docker</code>的用户组</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo groupadd –g 999 docker</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>将当前用户(ubuntu)添加到<code>docker</code>用户组并分配<code>sudo</code>权限</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo usermod -aG docker ubuntu</span><br></pre></td></tr></table></div></figure>\n<p>注销后重新登录，然后添加阿里云的Docker Hub镜像（注意，不同版本的添加方法不同，见<a href=\"https://dev.aliyun.com/list.html?namePrefix=docker\" target=\"_blank\" rel=\"noopener\">阿里云容器 Hub</a>）</p>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p /etc/docker</span><br><span class=\"line\">sudo tee /etc/docker/daemon.json &lt;&lt;-<span class=\"string\">'EOF'</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"registry-mirrors\"</span>: [<span class=\"string\">\"https://obou6wyb.mirror.aliyuncs.com\"</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\">$ sudo systemctl daemon-reload</span><br><span class=\"line\">$ sudo systemctl restart docker</span><br></pre></td></tr></table></div></figure>\n<p>如果觉得阿里云镜像不好用，可以选择DaoClound的镜像,配置方式见<a href=\"http://guide.daocloud.io/dcs/daocloud-9153151.html\" target=\"_blank\" rel=\"noopener\">DaoCloud官方文档</a></p>\n<h2 id=\"安装docker-compose\"><a class=\"markdownIt-Anchor\" href=\"2018/05/14/quick-start-hyperledger-fabric#安装docker-compose\"></a> 安装Docker-Compose<a href=\"2018/05/14/quick-start-hyperledger-fabric#安装docker-compose\"></a></h2>\n<p><code>Docker-Compose</code>是支持通过模板脚本批量创建的一个组件。在安装 <code>Docker-Compose</code>之前，需要安装<code>python-pip</code></p>\n<ul>\n<li>安装<code>python-pip</code></li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get python-pip</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>\n<p>下载 <code>Docker-Compose</code>，这里使用的是国内的DaoClound加速器进行下载<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">curl -L https://get.daocloud.io/docker/compose/releases/download/1.12.0/docker-compose-`uname -s`-`uname -m` &gt; ~/docker-compose</span><br></pre></td></tr></table></div></figure></p>\n</li>\n<li>\n<p>将<code>Docker-Compose</code>文件夹移动到<code>/usr/local/bin</code>目录下</p>\n</li>\n</ul>\n<p>​<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mv ~/docker-compose /usr/<span class=\"built_in\">local</span>/bin/docker-compose</span><br></pre></td></tr></table></div></figure></p>\n<ul>\n<li>为<code>Docker-Compose</code>附上可执行权限</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">chmod +x /usr/<span class=\"built_in\">local</span>/bin/docker-compose</span><br></pre></td></tr></table></div></figure>\n<h2 id=\"下载fabric源码\"><a class=\"markdownIt-Anchor\" href=\"2018/05/14/quick-start-hyperledger-fabric#下载fabric源码\"></a> 下载Fabric源码<a href=\"2018/05/14/quick-start-hyperledger-fabric#下载fabric源码\"></a></h2>\n<ul>\n<li>先在<code>GOPATH</code>下创建对应的目录</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir -p ~/go/src/github.com/hyperledger</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>切换到对应目录，使用<code>Git</code>命令将<code>fabric</code>的源码从github上克隆下来</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/go/src/github.com/hyperledgergit <span class=\"built_in\">clone</span> https://github.com/hyperledger/fabric.git</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>由于Fabric一直在更新，而我们并不需要使用最新的源码，所有将版本切换到<code>v1.0.0</code></li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/go/src/github.com/hyperledger/fabric</span><br><span class=\"line\">git checkout v1.0.0</span><br></pre></td></tr></table></div></figure>\n<h2 id=\"下载fabric-docker镜像\"><a class=\"markdownIt-Anchor\" href=\"2018/05/14/quick-start-hyperledger-fabric#下载fabric-docker镜像\"></a> 下载Fabric Docker镜像<a href=\"2018/05/14/quick-start-hyperledger-fabric#下载fabric-docker镜像\"></a></h2>\n<p>由于刚才设置了Docker Hub镜像的地址，并且官方文件中也提供了批量下载的脚本，所有我们只需运行下面命令即可</p>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/go/src/github.com/hyperledger/fabric/examples/e2e_cli/</span><br><span class=\"line\">$ <span class=\"built_in\">source</span> download-dockerimages.sh -c x86_64-1.0.0 -f x86_64-1.0.0</span><br></pre></td></tr></table></div></figure>\n<p>由于刚才设置的是国内的镜像站，在本地网速还不错的情况下下载数度还是很快的。当下载完成后，使用如下命令检查镜像列表</p>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker images</span><br><span class=\"line\">REPOSITORY                              TAG                 IMAGE ID            CREATED             SIZE</span><br><span class=\"line\">dev-peer0.org1.example.com-marbles-v4   latest              089d43e100c9        5 hours ago         173MB</span><br><span class=\"line\">dev-peer0.org1.example.com-fabcar-1.0   latest              6047921ee993        7 hours ago         173MB</span><br><span class=\"line\">hyperledger/fabric-tools                latest              0403fd1c72c7        10 months ago       1.32GB</span><br><span class=\"line\">hyperledger/fabric-tools                x86_64-1.0.0        0403fd1c72c7        10 months ago       1.32GB</span><br><span class=\"line\">hyperledger/fabric-couchdb              latest              2fbdbf3ab945        10 months ago       1.48GB</span><br><span class=\"line\">hyperledger/fabric-couchdb              x86_64-1.0.0        2fbdbf3ab945        10 months ago       1.48GB</span><br><span class=\"line\">hyperledger/fabric-kafka                latest              dbd3f94de4b5        10 months ago       1.3GB</span><br><span class=\"line\">hyperledger/fabric-kafka                x86_64-1.0.0        dbd3f94de4b5        10 months ago       1.3GB</span><br><span class=\"line\">hyperledger/fabric-zookeeper            latest              e545dbf1c6af        10 months ago       1.31GB</span><br><span class=\"line\">hyperledger/fabric-zookeeper            x86_64-1.0.0        e545dbf1c6af        10 months ago       1.31GB</span><br><span class=\"line\">hyperledger/fabric-orderer              latest              e317ca5638ba        10 months ago       179MB</span><br><span class=\"line\">hyperledger/fabric-orderer              x86_64-1.0.0        e317ca5638ba        10 months ago       179MB</span><br><span class=\"line\">hyperledger/fabric-peer                 latest              6830dcd7b9b5        10 months ago       182MB</span><br><span class=\"line\">hyperledger/fabric-peer                 x86_64-1.0.0        6830dcd7b9b5        10 months ago       182MB</span><br><span class=\"line\">hyperledger/fabric-javaenv              latest              8948126f0935        10 months ago       1.42GB</span><br><span class=\"line\">hyperledger/fabric-javaenv              x86_64-1.0.0        8948126f0935        10 months ago       1.42GB</span><br><span class=\"line\">hyperledger/fabric-ccenv                latest              7182c260a5ca        10 months ago       1.29GB</span><br><span class=\"line\">hyperledger/fabric-ccenv                x86_64-1.0.0        7182c260a5ca        10 months ago       1.29GB</span><br><span class=\"line\">hyperledger/fabric-ca                   latest              a15c59ecda5b        10 months ago       238MB</span><br><span class=\"line\">hyperledger/fabric-ca                   x86_64-1.0.0        a15c59ecda5b        10 months ago       238MB</span><br><span class=\"line\">hyperledger/fabric-baseos               x86_64-0.3.1        4b0cab202084        12 months ago       157MB</span><br></pre></td></tr></table></div></figure>\n<p>出现以上结果说明镜像已经下载成功</p>\n<h2 id=\"启动fabric网络并运行e2e_cli项目\"><a class=\"markdownIt-Anchor\" href=\"2018/05/14/quick-start-hyperledger-fabric#启动fabric网络并运行e2e_cli项目\"></a> 启动Fabric网络并运行e2e_cli项目<a href=\"2018/05/14/quick-start-hyperledger-fabric#启动fabric网络并运行e2e_cli项目\"></a></h2>\n<ul>\n<li>进入<code>e2e_cli</code>目录，并执行启动命令</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/go/src/github.com/hyperledger/fabric/examples/e2e_cli/</span><br><span class=\"line\">$ ./network_setup.sh up</span><br></pre></td></tr></table></div></figure>\n<p>这个过程做了如下操作</p>\n<blockquote>\n<p>1.编译生成<code>Fabric</code>公私钥，证书的程序，程序在目录：<code>fabric/release/linux-amd64/bin</code>下</p>\n</blockquote>\n<blockquote>\n<p>2.基于<code>configtx.yaml</code>生成创世区块和通道相关信息，并保存到<code>channel-artifacts</code>文件夹中</p>\n</blockquote>\n<blockquote>\n<p>3.基于<code>crypto-config.yaml</code>生成公私钥和证书信息，并保存在<code>crypto-config</code>文件夹中</p>\n</blockquote>\n<blockquote>\n<p>4.基于<code>docker-compose-cli.yaml</code>启动<code>1 Orderer + 4 Peer + 1 CLI</code>的<code>Fabric</code>容器</p>\n</blockquote>\n<blockquote>\n<p>5.在<code>CLI</code>启动的时候，会运行<code>srcipt/script.sh</code>文件，这个脚本文件包含了创建<code>Channel</code>,加入<code>Channel</code>，安装<code>Example02</code>,运行<code>Example02</code>等功能</p>\n</blockquote>\n<p>最后运行完成，我们会看到如下截图，说明网络启动成功了<br>\n<img src=\"/2018/05/14/quick-start-hyperledger-fabric/Ijek4E05ea.png\" alt=\"网络启动成功\"></p>\n<h2 id=\"手动测试一下fabric网络\"><a class=\"markdownIt-Anchor\" href=\"2018/05/14/quick-start-hyperledger-fabric#手动测试一下fabric网络\"></a> 手动测试一下Fabric网络<a href=\"2018/05/14/quick-start-hyperledger-fabric#手动测试一下fabric网络\"></a></h2>\n<p>我们以安装好的<code>Example02</code>进行测试,在官方例子中，<code>channel</code>的名字是<code>mychannel</code>,链码的名字是<code>mycc</code>,我们首先重新打开一个命令行，然后进入<code>CLI</code>，</p>\n<ul>\n<li>输入以下命令即可</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker <span class=\"built_in\">exec</span> -it cli bash</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>运行以下命令可以查询<code>a</code>账户的余额</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ peer chaincode query -C mychannel -n mycc -c <span class=\"string\">'&#123;\"Args\":[\"query\",\"a\"]&#125;'</span></span><br></pre></td></tr></table></div></figure>\n<p>查询结果如下图所示<br>\n<img src=\"/2018/05/14/quick-start-hyperledger-fabric/1LKAbjBimb.png\" alt=\"查询结果\"><br>\n可以看到<code>a</code>账户的余额现在是90</p>\n<ul>\n<li>运行以下命令可以查询<code>b</code>账户的余额</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ peer chaincode query -C mychannel -n mycc -c <span class=\"string\">'&#123;\"Args\":[\"query\",\"b\"]&#125;'</span></span><br></pre></td></tr></table></div></figure>\n<p>查询结果如下图所示<br>\n<img src=\"/2018/05/14/quick-start-hyperledger-fabric/m4gHE5LKcF.png\" alt=\"查询结果\"><br>\n可以看到<code>b</code>账户的余额现在是210</p>\n<ul>\n<li>现在将<code>b</code>账户的余额转100给<code>a</code>账户，运行如下命令</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">peer chaincode invoke -o orderer.example.com:7050  --tls <span class=\"literal\">true</span> --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem  -C mychannel -n mycc -c <span class=\"string\">'&#123;\"Args\":[\"invoke\",\"b\",\"a\",\"100\"]&#125;'</span></span><br></pre></td></tr></table></div></figure>\n<p>执行结果如下图所示<br>\n<img src=\"/2018/05/14/quick-start-hyperledger-fabric/Khlal55HBC.png\" alt=\"执行结果\"><br>\n可以看到执行成功了</p>\n<ul>\n<li>再次查询<code>a</code>账户的余额</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ peer chaincode query -C mychannel -n mycc -c <span class=\"string\">'&#123;\"Args\":[\"query\",\"a\"]&#125;'</span></span><br></pre></td></tr></table></div></figure>\n<p>查询结果如下图所示<br>\n<img src=\"/2018/05/14/quick-start-hyperledger-fabric/hd8f5cdegf.png\" alt=\"查询结果\"><br>\n可以看到<code>a</code>账户的余额现在是190,比之前多了100</p>\n<ul>\n<li>再次查询<code>b</code>账户的余额</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ peer chaincode query -C mychannel -n mycc -c <span class=\"string\">'&#123;\"Args\":[\"query\",\"b\"]&#125;'</span></span><br></pre></td></tr></table></div></figure>\n<p>查询结果如下图所示<br>\n<img src=\"/2018/05/14/quick-start-hyperledger-fabric/IEG6EHChJ4.png\" alt=\"查询结果\"><br>\n可以看到<code>b</code>账户的余额现在是110,比之前少了100</p>\n<p>调用链码一切正常</p>\n<h2 id=\"关闭区块链网络\"><a class=\"markdownIt-Anchor\" href=\"2018/05/14/quick-start-hyperledger-fabric#关闭区块链网络\"></a> 关闭区块链网络<a href=\"2018/05/14/quick-start-hyperledger-fabric#关闭区块链网络\"></a></h2>\n<ul>\n<li>退出<code>CLI</code>容器</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@4941e8bd4bd6:/opt/gopath/src/github.com/hyperledger/fabric/peer<span class=\"comment\"># exit</span></span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>关闭Fabric网络</li>\n</ul>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/go/src/github.com/hyperledger/fabric/examples/e2e_cli</span><br><span class=\"line\">$ ./network_setup.sh down</span><br></pre></td></tr></table></div></figure>\n<p>最后出现如下图说明关闭区块链网络成功<br>\n<img src=\"/2018/05/14/quick-start-hyperledger-fabric/afIigmdgDd.png\" alt=\"关闭区块链网络\"></p>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"2018/05/14/quick-start-hyperledger-fabric#总结\"></a> 总结<a href=\"2018/05/14/quick-start-hyperledger-fabric#总结\"></a></h2>\n<p>至此，部署以及测试<code>fabric</code>的环境已经全部完成，下一篇博客我将记录如何在此基础上部署及运行IBM官方区块链例子<a href=\"https://github.com/IBM-Blockchain/marbles\" target=\"_blank\" rel=\"noopener\">marbles(弹珠资产)</a></p>\n<h2 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"2018/05/14/quick-start-hyperledger-fabric#参考\"></a> 参考<a href=\"2018/05/14/quick-start-hyperledger-fabric#参考\"></a></h2>\n<ul>\n<li><a href=\"http://www.cnblogs.com/studyzy/p/7437157.html\" target=\"_blank\" rel=\"noopener\">快速搭建一个Fabric 1.0的环境</a></li>\n<li><a href=\"https://www.cnblogs.com/aberic/p/7532421.html\" target=\"_blank\" rel=\"noopener\">Hyperledger Fabric 1.0 从零开始（五）——运行测试e2e</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000014221967\" target=\"_blank\" rel=\"noopener\">超级账本搭建流程fabric-sample first-network</a></li>\n</ul>\n","prev":{"title":"基于ubuntu16.04部署IBM开源区块链项目-弹珠资产管理(Marbles)","link":"2018/05/15/deploy-IBM-blockchain-marbles"},"next":{"title":"fastJosn使用总结","link":"2018/05/13/using-fastjson"},"plink":"https://dmego.me/2018/05/14/quick-start-hyperledger-fabric/","toc":[{"title":"<a class=\"markdownIt-Anchor\"></a> 前言","id":"前言","index":"1"},{"title":"<a class=\"markdownIt-Anchor\"></a> 准备好机器环境","id":"准备好机器环境","index":"2"},{"title":"<a class=\"markdownIt-Anchor\"></a> 安装GO语言环境","id":"安装go语言环境","index":"3"},{"title":"<a class=\"markdownIt-Anchor\"></a> 安装Docker","id":"安装docker","index":"4"},{"title":"<a class=\"markdownIt-Anchor\"></a> 安装Docker-Compose","id":"安装docker-compose","index":"5"},{"title":"<a class=\"markdownIt-Anchor\"></a> 下载Fabric源码","id":"下载fabric源码","index":"6"},{"title":"<a class=\"markdownIt-Anchor\"></a> 下载Fabric Docker镜像","id":"下载fabric-docker镜像","index":"7"},{"title":"<a class=\"markdownIt-Anchor\"></a> 启动Fabric网络并运行e2e_cli项目","id":"启动fabric网络并运行e2e_cli项目","index":"8"},{"title":"<a class=\"markdownIt-Anchor\"></a> 手动测试一下Fabric网络","id":"手动测试一下fabric网络","index":"9"},{"title":"<a class=\"markdownIt-Anchor\"></a> 关闭区块链网络","id":"关闭区块链网络","index":"10"},{"title":"<a class=\"markdownIt-Anchor\"></a> 总结","id":"总结","index":"11"},{"title":"<a class=\"markdownIt-Anchor\"></a> 参考","id":"参考","index":"12"}],"copyright":{"link":"<a href=\"https://dmego.me/2018/05/14/quick-start-hyperledger-fabric/\" title=\"基于ubuntu16.04快速构建Hyperledger Fabric网络\">https://dmego.me/2018/05/14/quick-start-hyperledger-fabric/</a>","license":"自由转载-非商用-禁止演绎-保持署名(<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}